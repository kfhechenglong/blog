(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{498:function(e,t,s){"use strict";s.r(t);var a=s(54),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"filelist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filelist"}},[e._v("#")]),e._v(" FileList")]),e._v(" "),s("p",[e._v("A FileList is a lazy-evaluated list of files. When given a list\nof glob patterns for possible files to be included in the file\nlist, instead of searching the file structures to find the files,\na FileList holds the pattern for latter use.")]),e._v(" "),s("p",[e._v("This allows you to define a FileList to match any number of\nfiles, but only search out the actual files when then FileList\nitself is actually used. The key is that the first time an\nelement of the FileList/Array is requested, the pending patterns\nare resolved into a real list of file names.")]),e._v(" "),s("h3",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),s("p",[e._v("Add files to the list with the "),s("code",[e._v("include")]),e._v(" method. You can add glob\npatterns, individual files, or RegExp objects. When the Array\nmethods are invoked on the FileList, these items are resolved to\nan actual list of files.")]),e._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" fl "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("FileList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nfl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("include")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'test/*.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nfl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("exclude")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'test/helpers.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("p",[e._v("Use the "),s("code",[e._v("exclude")]),e._v(" method to override inclusions. You can use this\nwhen your inclusions are too broad.")]),e._v(" "),s("h3",{attrs:{id:"array-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-methods"}},[e._v("#")]),e._v(" Array methods")]),e._v(" "),s("p",[e._v("FileList has lazy-evaluated versions of most of the array\nmethods, including the following:")]),e._v(" "),s("ul",[s("li",[e._v("join")]),e._v(" "),s("li",[e._v("pop")]),e._v(" "),s("li",[e._v("push")]),e._v(" "),s("li",[e._v("concat")]),e._v(" "),s("li",[e._v("reverse")]),e._v(" "),s("li",[e._v("shift")]),e._v(" "),s("li",[e._v("unshift")]),e._v(" "),s("li",[e._v("slice")]),e._v(" "),s("li",[e._v("splice")]),e._v(" "),s("li",[e._v("sort")]),e._v(" "),s("li",[e._v("filter")]),e._v(" "),s("li",[e._v("forEach")]),e._v(" "),s("li",[e._v("some")]),e._v(" "),s("li",[e._v("every")]),e._v(" "),s("li",[e._v("map")]),e._v(" "),s("li",[e._v("indexOf")]),e._v(" "),s("li",[e._v("lastIndexOf")]),e._v(" "),s("li",[e._v("reduce")]),e._v(" "),s("li",[e._v("reduceRight")])]),e._v(" "),s("p",[e._v("When you call one of these methods, the items in the FileList\nwill be resolved to the full list of files, and the method will\nbe invoked on that result.")]),e._v(" "),s("h3",{attrs:{id:"special-length-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#special-length-method"}},[e._v("#")]),e._v(" Special "),s("code",[e._v("length")]),e._v(" method")]),e._v(" "),s("p",[s("code",[e._v("length")]),e._v(": FileList includes a length "),s("em",[e._v("method")]),e._v(" (instead of a\nproperty) which returns the number of actual files in the list\nonce it's been resolved.")]),e._v(" "),s("h3",{attrs:{id:"filelist-specific-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filelist-specific-methods"}},[e._v("#")]),e._v(" FileList-specific methods")]),e._v(" "),s("p",[s("code",[e._v("include")]),e._v(": Add a filename/glob/regex to the list")]),e._v(" "),s("p",[s("code",[e._v("exclude")]),e._v(": Override inclusions by excluding a filename/glob/regex")]),e._v(" "),s("p",[s("code",[e._v("resolve")]),e._v(": Resolve the items in the FileList to the full list of\nfiles. This method is invoked automatically when one of the array\nmethods is called.")]),e._v(" "),s("p",[s("code",[e._v("toArray")]),e._v(": Immediately resolves the list of items, and returns an\nactual array of filepaths.")]),e._v(" "),s("p",[s("code",[e._v("clearInclusions")]),e._v(": Clears any pending items -- must be used\nbefore resolving the list.")]),e._v(" "),s("p",[s("code",[e._v("clearExclusions")]),e._v(": Clears the list of exclusions rules.")])])}),[],!1,null,null,null);t.default=i.exports}}]);