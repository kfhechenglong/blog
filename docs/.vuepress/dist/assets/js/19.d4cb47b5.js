(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{439:function(t,s,a){"use strict";a.r(s);var e=a(54),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ansi-regex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ansi-regex"}},[t._v("#")]),t._v(" ansi-regex")]),t._v(" "),a("blockquote",[a("p",[t._v("Regular expression for matching "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/ANSI_escape_code",target:"_blank",rel:"noopener noreferrer"}},[t._v("ANSI escape codes"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ npm install ansi-regex\n")])])]),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ansiRegex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ansi-regex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\u001B[4mcake\\u001B[0m'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cake'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\u001B[4mcake\\u001B[0m'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['\\u001B[4m', '\\u001B[0m']")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\u001B[4mcake\\u001B[0m'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("onlyFirst"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['\\u001B[4m']")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\u001B]8;;https://github.com\\u0007click\\u001B]8;;\\u0007'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ansiRegex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> ['\\u001B]8;;https://github.com\\u0007', '\\u001B]8;;\\u0007']")]),t._v("\n")])])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("h3",{attrs:{id:"ansiregex-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ansiregex-options"}},[t._v("#")]),t._v(" ansiRegex(options?)")]),t._v(" "),a("p",[t._v("Returns a regex for matching ANSI escape codes.")]),t._v(" "),a("h4",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" options")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("object")])]),t._v(" "),a("h5",{attrs:{id:"onlyfirst"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#onlyfirst"}},[t._v("#")]),t._v(" onlyFirst")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")]),a("br"),t._v("\nDefault: "),a("code",[t._v("false")]),t._v(" "),a("em",[t._v("(Matches any ANSI escape codes in a string)")])]),t._v(" "),a("p",[t._v("Match only the first ANSI escape.")]),t._v(" "),a("h2",{attrs:{id:"faq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[t._v("#")]),t._v(" FAQ")]),t._v(" "),a("h3",{attrs:{id:"why-do-you-test-for-codes-not-in-the-ecma-48-standard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-do-you-test-for-codes-not-in-the-ecma-48-standard"}},[t._v("#")]),t._v(" Why do you test for codes not in the ECMA 48 standard?")]),t._v(" "),a("p",[t._v("Some of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. We test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.")]),t._v(" "),a("p",[t._v("On the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.")]),t._v(" "),a("h2",{attrs:{id:"maintainers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maintainers"}},[t._v("#")]),t._v(" Maintainers")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/sindresorhus",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sindre Sorhus"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/qix-",target:"_blank",rel:"noopener noreferrer"}},[t._v("Josh Junon"),a("OutboundLink")],1)])]),t._v(" "),a("hr"),t._v(" "),a("div",{attrs:{align:"center"}},[a("b",[a("a",{attrs:{href:"https://tidelift.com/subscription/pkg/npm-ansi-regex?utm_source=npm-ansi-regex&utm_medium=referral&utm_campaign=readme"}},[t._v("Get professional support for this package with a Tidelift subscription")])]),t._v(" "),a("br"),t._v(" "),a("sub",[t._v("\n\t\tTidelift helps make open source sustainable for maintainers while giving companies"),a("br"),t._v("assurances about security, maintenance, and licensing for their dependencies.\n\t")])])])}),[],!1,null,null,null);s.default=n.exports}}]);