(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{537:function(t,n,s){"use strict";s.r(n);var a=s(54),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"strip-final-newline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strip-final-newline"}},[t._v("#")]),t._v(" strip-final-newline")]),t._v(" "),s("blockquote",[s("p",[t._v("Strip the final "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Newline",target:"_blank",rel:"noopener noreferrer"}},[t._v("newline character"),s("OutboundLink")],1),t._v(" from a string/buffer")])]),t._v(" "),s("p",[t._v("Can be useful when parsing the output of, for example, "),s("code",[t._v("ChildProcess#execFile")]),t._v(", as "),s("a",{attrs:{href:"https://stackoverflow.com/questions/729692/why-should-text-files-end-with-a-newline",target:"_blank",rel:"noopener noreferrer"}},[t._v("binaries usually output a newline at the end"),s("OutboundLink")],1),t._v(". Normally, you would use "),s("code",[t._v("stdout.trim()")]),t._v(", but that would also remove newlines at the start and whitespace.")]),t._v(" "),s("h2",{attrs:{id:"install"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ npm install strip-final-newline\n")])])]),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" stripFinalNewline "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'strip-final-newline'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stripFinalNewline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo\\nbar\\n\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> 'foo\\nbar\\n'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stripFinalNewline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo\\nbar\\n\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=> 'foo\\nbar\\n'")]),t._v("\n")])])]),s("hr"),t._v(" "),s("div",{attrs:{align:"center"}},[s("b",[s("a",{attrs:{href:"https://tidelift.com/subscription/pkg/npm-strip-eof?utm_source=npm-strip-eof&utm_medium=referral&utm_campaign=readme"}},[t._v("Get professional support for this package with a Tidelift subscription")])]),t._v(" "),s("br"),t._v(" "),s("sub",[t._v("\n\t\tTidelift helps make open source sustainable for maintainers while giving companies"),s("br"),t._v("assurances about security, maintenance, and licensing for their dependencies.\n\t")])])])}),[],!1,null,null,null);n.default=e.exports}}]);