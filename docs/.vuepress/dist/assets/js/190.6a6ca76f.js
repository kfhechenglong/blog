(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{612:function(t,e,a){"use strict";a.r(e);var s=a(54),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ora"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ora"}},[t._v("#")]),t._v(" ora")]),t._v(" "),a("blockquote",[a("p",[t._v("Elegant terminal spinner")])]),t._v(" "),a("p",{attrs:{align:"center"}},[a("br"),t._v(" "),a("img",{attrs:{src:"screenshot.svg",width:"500"}}),t._v(" "),a("br")]),t._v(" "),a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ npm install ora\n")])])]),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ora "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ora'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" spinner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ora")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Loading unicorns'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tspinner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yellow'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tspinner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Loading rainbows'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("h3",{attrs:{id:"ora-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ora-text"}},[t._v("#")]),t._v(" ora(text)")]),t._v(" "),a("h3",{attrs:{id:"ora-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ora-options"}},[t._v("#")]),t._v(" ora(options)")]),t._v(" "),a("p",[t._v("If a string is provided, it is treated as a shortcut for "),a("a",{attrs:{href:"#text"}},[a("code",[t._v("options.text")])]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" options")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("object")])]),t._v(" "),a("h5",{attrs:{id:"text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text"}},[t._v("#")]),t._v(" text")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("string")])]),t._v(" "),a("p",[t._v("Text to display after the spinner.")]),t._v(" "),a("h5",{attrs:{id:"prefixtext"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prefixtext"}},[t._v("#")]),t._v(" prefixText")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("string | () => string")])]),t._v(" "),a("p",[t._v("Text or a function that returns text to display before the spinner. No prefix text will be displayed if set to an empty string.")]),t._v(" "),a("h5",{attrs:{id:"spinner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spinner"}},[t._v("#")]),t._v(" spinner")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("string | object")]),a("br"),t._v("\nDefault: "),a("code",[t._v("'dots'")]),t._v(" "),a("img",{attrs:{src:"screenshot-spinner.gif",width:"14"}})]),t._v(" "),a("p",[t._v("Name of one of the "),a("a",{attrs:{href:"https://github.com/sindresorhus/cli-spinners/blob/main/spinners.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("provided spinners"),a("OutboundLink")],1),t._v(". See "),a("code",[t._v("example.js")]),t._v(" in this repo if you want to test out different spinners. On Windows, it will always use the "),a("code",[t._v("line")]),t._v(" spinner as the Windows command-line doesn't have proper Unicode support.")]),t._v(" "),a("p",[t._v("Or an object like:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tinterval"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Optional")]),t._v("\n\tframes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h5",{attrs:{id:"color"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color"}},[t._v("#")]),t._v(" color")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("string")]),a("br"),t._v("\nDefault: "),a("code",[t._v("'cyan'")]),a("br"),t._v("\nValues: "),a("code",[t._v("'black' | 'red' | 'green' | 'yellow' | 'blue' | 'magenta' | 'cyan' | 'white' | 'gray'")])]),t._v(" "),a("p",[t._v("Color of the spinner.")]),t._v(" "),a("h5",{attrs:{id:"hidecursor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hidecursor"}},[t._v("#")]),t._v(" hideCursor")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")]),a("br"),t._v("\nDefault: "),a("code",[t._v("true")])]),t._v(" "),a("p",[t._v("Set to "),a("code",[t._v("false")]),t._v(" to stop Ora from hiding the cursor.")]),t._v(" "),a("h5",{attrs:{id:"indent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indent"}},[t._v("#")]),t._v(" indent")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("number")]),a("br"),t._v("\nDefault: "),a("code",[t._v("0")])]),t._v(" "),a("p",[t._v("Indent the spinner with the given number of spaces.")]),t._v(" "),a("h5",{attrs:{id:"interval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interval"}},[t._v("#")]),t._v(" interval")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("number")]),a("br"),t._v("\nDefault: Provided by the spinner or "),a("code",[t._v("100")])]),t._v(" "),a("p",[t._v("Interval between each frame.")]),t._v(" "),a("p",[t._v("Spinners provide their own recommended interval, so you don't really need to specify this.")]),t._v(" "),a("h5",{attrs:{id:"stream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream"}},[t._v("#")]),t._v(" stream")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("stream.Writable")]),a("br"),t._v("\nDefault: "),a("code",[t._v("process.stderr")])]),t._v(" "),a("p",[t._v("Stream to write the output.")]),t._v(" "),a("p",[t._v("You could for example set this to "),a("code",[t._v("process.stdout")]),t._v(" instead.")]),t._v(" "),a("h5",{attrs:{id:"isenabled"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isenabled"}},[t._v("#")]),t._v(" isEnabled")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")])]),t._v(" "),a("p",[t._v("Force enable/disable the spinner. If not specified, the spinner will be enabled if the "),a("code",[t._v("stream")]),t._v(" is being run inside a TTY context (not spawned or piped) and/or not in a CI environment.")]),t._v(" "),a("p",[t._v("Note that "),a("code",[t._v("{isEnabled: false}")]),t._v(" doesn't mean it won't output anything. It just means it won't output the spinner, colors, and other ansi escape codes. It will still log text.")]),t._v(" "),a("h5",{attrs:{id:"issilent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issilent"}},[t._v("#")]),t._v(" isSilent")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")]),a("br"),t._v("\nDefault: "),a("code",[t._v("false")])]),t._v(" "),a("p",[t._v("Disable the spinner and all log text. All output is suppressed and "),a("code",[t._v("isEnabled")]),t._v(" will be considered "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("h5",{attrs:{id:"discardstdin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discardstdin"}},[t._v("#")]),t._v(" discardStdin")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("boolean")]),a("br"),t._v("\nDefault: "),a("code",[t._v("true")])]),t._v(" "),a("p",[t._v("Discard stdin input (except Ctrl+C) while running if it's TTY. This prevents the spinner from twitching on input, outputting broken lines on "),a("kbd",[t._v("Enter")]),t._v(" key presses, and prevents buffering of input while the spinner is running.")]),t._v(" "),a("p",[t._v("This has no effect on Windows as there's no good way to implement discarding stdin properly there.")]),t._v(" "),a("h3",{attrs:{id:"instance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instance"}},[t._v("#")]),t._v(" Instance")]),t._v(" "),a("h4",{attrs:{id:"start-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-text"}},[t._v("#")]),t._v(" .start(text?)")]),t._v(" "),a("p",[t._v("Start the spinner. Returns the instance. Set the current text if "),a("code",[t._v("text")]),t._v(" is provided.")]),t._v(" "),a("h4",{attrs:{id:"stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[t._v("#")]),t._v(" .stop()")]),t._v(" "),a("p",[t._v("Stop and clear the spinner. Returns the instance.")]),t._v(" "),a("h4",{attrs:{id:"succeed-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#succeed-text"}},[t._v("#")]),t._v(" .succeed(text?)")]),t._v(" "),a("p",[t._v("Stop the spinner, change it to a green "),a("code",[t._v("✔")]),t._v(" and persist the current text, or "),a("code",[t._v("text")]),t._v(" if provided. Returns the instance. See the GIF below.")]),t._v(" "),a("h4",{attrs:{id:"fail-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fail-text"}},[t._v("#")]),t._v(" .fail(text?)")]),t._v(" "),a("p",[t._v("Stop the spinner, change it to a red "),a("code",[t._v("✖")]),t._v(" and persist the current text, or "),a("code",[t._v("text")]),t._v(" if provided. Returns the instance. See the GIF below.")]),t._v(" "),a("h4",{attrs:{id:"warn-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#warn-text"}},[t._v("#")]),t._v(" .warn(text?)")]),t._v(" "),a("p",[t._v("Stop the spinner, change it to a yellow "),a("code",[t._v("⚠")]),t._v(" and persist the current text, or "),a("code",[t._v("text")]),t._v(" if provided. Returns the instance.")]),t._v(" "),a("h4",{attrs:{id:"info-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#info-text"}},[t._v("#")]),t._v(" .info(text?)")]),t._v(" "),a("p",[t._v("Stop the spinner, change it to a blue "),a("code",[t._v("ℹ")]),t._v(" and persist the current text, or "),a("code",[t._v("text")]),t._v(" if provided. Returns the instance.")]),t._v(" "),a("h4",{attrs:{id:"isspinning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isspinning"}},[t._v("#")]),t._v(" .isSpinning")]),t._v(" "),a("p",[t._v("A boolean of whether the instance is currently spinning.")]),t._v(" "),a("h4",{attrs:{id:"stopandpersist-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stopandpersist-options"}},[t._v("#")]),t._v(" .stopAndPersist(options?)")]),t._v(" "),a("p",[t._v("Stop the spinner and change the symbol or text. Returns the instance. See the GIF below.")]),t._v(" "),a("h5",{attrs:{id:"options-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-2"}},[t._v("#")]),t._v(" options")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("object")])]),t._v(" "),a("h6",{attrs:{id:"symbol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[t._v("#")]),t._v(" symbol")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("string")]),a("br"),t._v("\nDefault: "),a("code",[t._v("' '")])]),t._v(" "),a("p",[t._v("Symbol to replace the spinner with.")]),t._v(" "),a("h6",{attrs:{id:"text-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text-2"}},[t._v("#")]),t._v(" text")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("string")]),a("br"),t._v("\nDefault: Current "),a("code",[t._v("'text'")])]),t._v(" "),a("p",[t._v("Text to be persisted after the symbol")]),t._v(" "),a("h6",{attrs:{id:"prefixtext-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prefixtext-2"}},[t._v("#")]),t._v(" prefixText")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("string")]),a("br"),t._v("\nDefault: Current "),a("code",[t._v("prefixText")])]),t._v(" "),a("p",[t._v("Text to be persisted before the symbol. No prefix text will be displayed if set to an empty string.")]),t._v(" "),a("img",{attrs:{src:"screenshot-2.gif",width:"480"}}),t._v(" "),a("h4",{attrs:{id:"clear"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clear"}},[t._v("#")]),t._v(" .clear()")]),t._v(" "),a("p",[t._v("Clear the spinner. Returns the instance.")]),t._v(" "),a("h4",{attrs:{id:"render"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#render"}},[t._v("#")]),t._v(" .render()")]),t._v(" "),a("p",[t._v("Manually render a new frame. Returns the instance.")]),t._v(" "),a("h4",{attrs:{id:"frame"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frame"}},[t._v("#")]),t._v(" .frame()")]),t._v(" "),a("p",[t._v("Get a new frame.")]),t._v(" "),a("h4",{attrs:{id:"text-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text-3"}},[t._v("#")]),t._v(" .text")]),t._v(" "),a("p",[t._v("Change the text after the spinner.")]),t._v(" "),a("h4",{attrs:{id:"prefixtext-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prefixtext-3"}},[t._v("#")]),t._v(" .prefixText")]),t._v(" "),a("p",[t._v("Change the text before the spinner. No prefix text will be displayed if set to an empty string.")]),t._v(" "),a("h4",{attrs:{id:"color-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color-2"}},[t._v("#")]),t._v(" .color")]),t._v(" "),a("p",[t._v("Change the spinner color.")]),t._v(" "),a("h4",{attrs:{id:"spinner-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spinner-2"}},[t._v("#")]),t._v(" .spinner")]),t._v(" "),a("p",[t._v("Change the spinner.")]),t._v(" "),a("h4",{attrs:{id:"indent-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indent-2"}},[t._v("#")]),t._v(" .indent")]),t._v(" "),a("p",[t._v("Change the spinner indent.")]),t._v(" "),a("h3",{attrs:{id:"ora-promise-action-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ora-promise-action-text"}},[t._v("#")]),t._v(" ora.promise(action, text)")]),t._v(" "),a("h3",{attrs:{id:"ora-promise-action-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ora-promise-action-options"}},[t._v("#")]),t._v(" ora.promise(action, options)")]),t._v(" "),a("p",[t._v("Starts a spinner for a promise. The spinner is stopped with "),a("code",[t._v(".succeed()")]),t._v(" if the promise fulfills or with "),a("code",[t._v(".fail()")]),t._v(" if it rejects. Returns the spinner instance.")]),t._v(" "),a("h4",{attrs:{id:"action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#action"}},[t._v("#")]),t._v(" action")]),t._v(" "),a("p",[t._v("Type: "),a("code",[t._v("Promise")])]),t._v(" "),a("h2",{attrs:{id:"faq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[t._v("#")]),t._v(" FAQ")]),t._v(" "),a("h3",{attrs:{id:"how-do-i-change-the-color-of-the-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-do-i-change-the-color-of-the-text"}},[t._v("#")]),t._v(" How do I change the color of the text?")]),t._v(" "),a("p",[t._v("Use "),a("a",{attrs:{href:"https://github.com/chalk/chalk",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chalk"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ora "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ora'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" chalk "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chalk'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" spinner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ora")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Loading ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("chalk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("red")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unicorns'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"why-does-the-spinner-freeze"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-does-the-spinner-freeze"}},[t._v("#")]),t._v(" Why does the spinner freeze?")]),t._v(" "),a("p",[t._v("JavaScript is single-threaded, so synchronous operations blocks the thread, including the spinner animation. Prefer asynchronous operations whenever possible.")]),t._v(" "),a("h2",{attrs:{id:"related"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#related"}},[t._v("#")]),t._v(" Related")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/sindresorhus/cli-spinners",target:"_blank",rel:"noopener noreferrer"}},[t._v("cli-spinners"),a("OutboundLink")],1),t._v(" - Spinners for use in the terminal")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/SamVerschueren/listr",target:"_blank",rel:"noopener noreferrer"}},[t._v("listr"),a("OutboundLink")],1),t._v(" - Terminal task list")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/kiliankoe/CLISpinner",target:"_blank",rel:"noopener noreferrer"}},[t._v("CLISpinner"),a("OutboundLink")],1),t._v(" - Terminal spinner library for Swift")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ManrajGrover/halo",target:"_blank",rel:"noopener noreferrer"}},[t._v("halo"),a("OutboundLink")],1),t._v(" - Python port")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/FGRibreau/spinners",target:"_blank",rel:"noopener noreferrer"}},[t._v("spinners"),a("OutboundLink")],1),t._v(" - Terminal spinners for Rust")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/joeycozza/marquee-ora",target:"_blank",rel:"noopener noreferrer"}},[t._v("marquee-ora"),a("OutboundLink")],1),t._v(" - Scrolling marquee spinner for Ora")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/briandowns/spinner",target:"_blank",rel:"noopener noreferrer"}},[t._v("briandowns/spinner"),a("OutboundLink")],1),t._v(" - Terminal spinner/progress indicator for Go")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/tj/go-spin",target:"_blank",rel:"noopener noreferrer"}},[t._v("tj/go-spin"),a("OutboundLink")],1),t._v(" - Terminal spinner package for Go")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://observablehq.com/@victordidenko/ora",target:"_blank",rel:"noopener noreferrer"}},[t._v("observablehq.com/@victordidenko/ora"),a("OutboundLink")],1),t._v(" - Ora port to Observable notebooks")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/jcarpanelli/spinnies",target:"_blank",rel:"noopener noreferrer"}},[t._v("spinnies"),a("OutboundLink")],1),t._v(" - Terminal multi-spinner library for Node.js")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/HarryPeach/kia",target:"_blank",rel:"noopener noreferrer"}},[t._v("kia"),a("OutboundLink")],1),t._v(" - Simple terminal spinners for Deno 🦕")])])])}),[],!1,null,null,null);e.default=r.exports}}]);